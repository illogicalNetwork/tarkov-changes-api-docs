name: Build and Deploy Prod

on:
  release:
    types: [released]

jobs:
  build-api:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v2

      - name: 'Remove existing Docker context'
        continue-on-error: true
        run: docker context rm -f builders

      - name: 'Setup Docker Context'
        run: docker context create builders

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: 'Build and push workflow'
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v3
        with:
          file: './docker/Dockerfile'
          push: true
          tags: |
            ghcr.io/illogicalnetwork/tarkov-changes-api-docs:${{ github.event.release.tag_name }}
            ghcr.io/illogicalnetwork/tarkov-changes-api-docs:latest
      - name: 'Build and push release'
        if: github.event_name == 'release'
        uses: docker/build-push-action@v3
        with:
          file: './docker/Dockerfile'
          push: true
          tags: |
            ghcr.io/illogicalnetwork/tarkov-changes-api-docs:${{ github.event.release.tag_name }}
            ghcr.io/illogicalnetwork/tarkov-changes-api-docs:latest

  deploy-api:
    runs-on: self-hosted
    needs: [build-api]

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Pull latest image
        run: docker pull ghcr.io/illogicalnetwork/tarkov-changes-api-docs:latest

      - name: Rename Running Container
        run: docker rename api-docs api-docs-blue

      - name: Start API Container
        continue-on-error: true
        run: docker run --network=tarkov_dev --restart=unless-stopped --env-file=/data/api/api-prod.env --label "traefik.enable=true" --label "traefik.http.routers.apidocs.service=apidocs" --label "traefik.http.services.apidocs.loadbalancer.server.port=4567" --label "traefik.http.routers.apidocs.rule=Host(\`docs.tarkov-changes.com\`)" --name="api-docs" -itd ghcr.io/illogicalnetwork/tarkov-changes-api-docs:latest

      - name: Stop Blue API Container
        continue-on-error: true
        run: docker stop api-docs-blue

      - name: Stop API Container
        continue-on-error: true
        run: docker rm api-docs-blue
