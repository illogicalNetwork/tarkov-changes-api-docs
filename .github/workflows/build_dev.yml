name: Build and Deploy Staging

on:
  release:
    types: [prereleased]

  workflow_dispatch:

jobs:
  build-site:
    runs-on: ubuntu-latest
    env:
      ruby-version: 2.6

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - name: Install poetry and install deps
        run: |
          python -m pip install -U pip
          pip install poetry
          cd scripts
          poetry install
          cd ..
          poetry run python scripts/gen_docs.py > source/index.html.md

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby-version }}
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ env.ruby-version }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-${{ env.ruby-version }}-
            gems-${{ runner.os }}-
      - run: bundle config set deployment 'true'
      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - run: bundle exec middleman build

      - uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build

  build-site-docker:
    runs-on: ubuntu-latest
    needs: [build-site]

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v2

      - name: 'Remove existing Docker context'
        continue-on-error: true
        run: docker context rm -f builders

      - name: 'Setup Docker Context'
        run: docker context create builders

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Grab Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: build

      - name: 'Build and push workflow'
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: './docker/Dockerfile'
          push: true
          tags: |
            ghcr.io/illogicalnetwork/tarkov-changes-api-docs:staging

      - name: 'Build and push release'
        if: github.event_name == 'release'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: './docker/Dockerfile'
          push: true
          tags: |
            ghcr.io/illogicalnetwork/tarkov-changes-api-docs:staging

  deploy-site-docker:
    runs-on: self-hosted
    needs: [build-site-docker]

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Pull latest image
        run: docker pull ghcr.io/illogicalnetwork/tarkov-changes-api-docs:staging

      - name: Rename Running Container
        continue-on-error: true
        run: docker rename staging-api-docs staging-api-docs-blue

      - name: Start API Container
        continue-on-error: true
        run: docker run --network=tarkov_dev --restart=unless-stopped --env-file=/data/api/api-staging.env --label "traefik.enable=true" --label "traefik.http.routers.stagingapidocs.service=stagingapidocs" --label "traefik.http.services.stagingapidocs.loadbalancer.server.port=8000" --label "traefik.http.routers.stagingapidocs.rule=Host(\`staging-docs.tarkov-changes.com\`)" --name="staging-api-docs" -itd ghcr.io/illogicalnetwork/tarkov-changes-api-docs:staging

      - name: Stop Blue API Container
        continue-on-error: true
        run: docker stop staging-api-docs-blue

      - name: Stop API Container
        continue-on-error: true
        run: docker rm staging-api-docs-blue
